"use strict";var R=Object.create;var S=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var V=Object.getOwnPropertyNames;var _=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty;var z=(e,t,n,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of V(t))!k.call(e,o)&&o!==n&&S(e,o,{get:()=>t[o],enumerable:!(s=T(t,o))||s.enumerable});return e};var w=(e,t,n)=>(n=e!=null?R(_(e)):{},z(t||!e||!e.__esModule?S(n,"default",{value:e,enumerable:!0}):n,e));var Z=require("./node_modules/dotenv/config.js"),O=w(require("./node_modules/next/dist/server/next.js"),1),j=w(require("./node_modules/express/index.js"),1),v=require("./node_modules/mongodb/lib/index.js"),P=require("./node_modules/bson/lib/bson.js"),$=w(require("./node_modules/formidable/src/index.js"),1),a=require("fs"),E=require("crypto");function L(e){let t=new TextEncoder().encode(e),n=(0,E.createHash)("sha256").update(t).digest();return Array.from(new Uint8Array(n)).map(l=>l.toString(16).padStart(2,"0")).join("")}var M=parseInt(`${process.env.PORT}`,10)||3e3,H=process.env.NODE_ENV!=="production",A=(0,O.default)({dev:H}),W=A.getRequestHandler(),q="mongodb+srv://expressjs:fVlgIRopIn2V6LLN@cluster0.n9ki8.mongodb.net/?retryWrites=true&w=majority",y=H?"devProcurement":"Procurement",F="FilesMetadata",C=new v.MongoClient(q).connect();async function I(){return await C}async function G(){(await C).close()}process.on("SIGINT",e=>{console.log("Closing signal: "+e),G()});function U(e){return"originalFilename"in e}function J(e){return"length"in e}async function K(e){return await(await I()).db(y).collection(F).findOne({_id:e},{projection:{filename:1,dir:1}})}async function Q(e){return await(await I()).db(y).collection(F).insertOne(e).then(n=>n.insertedId)}async function X(e,t){return await(await I()).db(y).collection(F).updateOne({_id:e},{$set:{dir:t.dir}}).then(s=>s.upsertedId)}var h="./files/";A.prepare().then(()=>{let e=(0,j.default)();e.get("/files/:fmid",async(t,n,s)=>{try{let o=await K(new P.ObjectId(t.params.fmid));if(o){let{filename:l,dir:r}=o;console.log(`File downloading: ${l}
At: ${r}`),n.download(`${r}`,`${l}`,function(d){return d?(console.log(`Error downloading: ${d}`),s(d)):(console.log(`Successfully downloaded: ${l}`),n.status(200).end())})}else return n.status(404).end("Can't find that file, sorry!")}catch(o){return console.log(o),n.status(500).end("Something went wrong.")}}).post("/files/",async(t,n,s)=>{let o=(0,$.default)(),l=new Promise((r,d)=>{o.parse(t,(c,f,i)=>{c&&d(c),r({fields:f,files:i})})});(0,a.existsSync)(h)||(0,a.mkdirSync)(h),await l.then(r=>{let{fields:d,files:c}=r,f=[];if(U(c.file)?f[0]=c.file:J(c.file)&&(f=c.file),f.length<1)throw new Error("Can't find any files");f.forEach(async i=>{let x=i.originalFilename?.lastIndexOf("."),b=i.originalFilename?.substring(x?x+1:0),m=await Q({filename:i.originalFilename?i.originalFilename:"",filetype:b||"",contentType:i.mimetype?i.mimetype:"",size:i.size,uploadDate:new Date}),u=h+L(m.toHexString());return await new Promise((g,D)=>{let N=(0,a.createReadStream)(i.filepath),p=(0,a.createWriteStream)(u);p.on("error",B=>{D(B)}),p.on("finish",()=>{g()}),N.pipe(p)}).catch(g=>{throw new Error(g)}),await X(m,{dir:u}),console.log(`New file uploaded at: ${u}`),console.log("fmid: "+m.toHexString()),n.status(201).json({data:{fmid:m.toHexString()}})})}).catch(r=>(console.log(r),n.status(500).end(r)))}).all("*",(t,n)=>W(t,n)),e.listen(M,()=>{console.log(`Server started on port ${M}`)})}).catch(e=>{console.error(e),process.exit(1)});

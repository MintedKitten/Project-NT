import*as b from"./node_modules/dotenv/lib/main.js";import $ from"./node_modules/next/dist/server/next.js";import E from"./node_modules/express/index.js";import{MongoClient as H}from"./node_modules/mongodb/lib/index.js";import{ObjectId as A}from"./node_modules/bson/lib/bson.js";import C from"./node_modules/formidable/src/index.js";import{createReadStream as D,createWriteStream as N,existsSync as B,mkdirSync as R}from"fs";import{createHash as T}from"crypto";b.config({path:"/.env.local"});function V(e){let n=new TextEncoder().encode(e),t=T("sha256").update(n).digest();return Array.from(new Uint8Array(t)).map(a=>a.toString(16).padStart(2,"0")).join("")}var x=parseInt(`${process.env.PORT}`,10)||3e3,S=process.env.NODE_ENV!=="production",v=$({dev:S}),_=v.getRequestHandler(),k="mongodb+srv://expressjs:fVlgIRopIn2V6LLN@cluster0.n9ki8.mongodb.net/?retryWrites=true&w=majority",h=S?"devProcurement":"Procurement",w="FilesMetadata",M=new H(k).connect();async function y(){return await M}async function z(){(await M).close()}process.on("SIGINT",e=>{console.log("Closing signal: "+e),z()});function L(e){return"originalFilename"in e}function W(e){return"length"in e}async function q(e){return await(await y()).db(h).collection(w).findOne({_id:e},{projection:{filename:1,dir:1}})}async function G(e){return await(await y()).db(h).collection(w).insertOne(e).then(t=>t.insertedId)}async function U(e,n){return await(await y()).db(h).collection(w).updateOne({_id:e},{$set:{dir:n.dir}}).then(d=>d.upsertedId)}var p="./files/";v.prepare().then(()=>{let e=E();e.get("/files/:fmid",async(n,t,d)=>{try{let r=await q(new A(n.params.fmid));if(r){let{filename:a,dir:i}=r;console.log(`File downloading: ${a}
At: ${i}`),t.download(`${i}`,`${a}`,function(l){return l?(console.log(`Error downloading: ${l}`),d(l)):(console.log(`Successfully downloaded: ${a}`),t.status(200).end())})}else return t.status(404).end("Can't find that file, sorry!")}catch(r){return console.log(r),t.status(500).end("Something went wrong.")}}).post("/files/",async(n,t,d)=>{let r=C(),a=new Promise((i,l)=>{r.parse(n,(s,c,o)=>{s&&l(s),i({fields:c,files:o})})});B(p)||R(p),await a.then(i=>{let{fields:l,files:s}=i,c=[];if(L(s.file)?c[0]=s.file:W(s.file)&&(c=s.file),c.length<1)throw new Error("Can't find any files");c.forEach(async o=>{let F=o.originalFilename?.lastIndexOf("."),I=o.originalFilename?.substring(F?F+1:0),f=await G({filename:o.originalFilename?o.originalFilename:"",filetype:I||"",contentType:o.mimetype?o.mimetype:"",size:o.size,uploadDate:new Date}),m=p+V(f.toHexString());return await new Promise((u,O)=>{let j=D(o.filepath),g=N(m);g.on("error",P=>{O(P)}),g.on("finish",()=>{u()}),j.pipe(g)}).catch(u=>{throw new Error(u)}),await U(f,{dir:m}),console.log(`New file uploaded at: ${m}`),console.log("fmid: "+f.toHexString()),t.status(201).json({data:{fmid:f.toHexString()}})})}).catch(i=>(console.log(i),t.status(500).end(i)))}).all("*",(n,t)=>_(n,t)),e.listen(x,()=>{console.log(`Server started on port ${x}`)})}).catch(e=>{console.error(e),process.exit(1)});

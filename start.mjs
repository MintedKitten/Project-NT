import P from"./node_modules/next/dist/server/next.js";import T from"./node_modules/express/index.js";import{MongoClient as j}from"./node_modules/mongodb/lib/index.js";import{ObjectId as R}from"./node_modules/bson/lib/bson.js";import H from"./node_modules/formidable/src/index.js";import{createReadStream as _,createWriteStream as A,existsSync as S,mkdirSync as D}from"fs";import{createHash as N}from"crypto";import{getToken as k}from"./node_modules/next-auth/jwt/index.js";function B(n){let t=new TextEncoder().encode(n),e=N("sha256").update(t).digest();return Array.from(new Uint8Array(e)).map(s=>s.toString(16).padStart(2,"0")).join("")}var x=parseInt(`${process.env.PORT}`)||3e3,E=process.env.NODE_ENV!=="production",v=P({dev:E}),W=v.getRequestHandler(),w=E?"devProcurement":"Procurement",y="FilesMetadata";async function F(){return await new j(process.env.EXPRESS_MONGO_STRING+"").connect()}function z(n){return"originalFilename"in n}function G(n){return"length"in n}async function J(n){return await(await F()).db(w).collection(y).findOne({_id:n},{projection:{filename:1,dir:1}})}async function U(n){let t=await F(),e=await t.db(w).collection(y).insertOne(n).then(i=>i.insertedId);return await t.close(),e}async function V(n,t){let e=await F(),i=await e.db(w).collection(y).updateOne({_id:n},{$set:{dir:t.dir}}).then(a=>a.upsertedId);return await e.close(),i}function b(n=""){let t=n.split("; "),e={};return t.forEach(i=>{let a=i.indexOf("="),s=i.substring(0,a),c=i.substring(a+1);e[s]=decodeURIComponent(c)}),e}var h="./files/";v.prepare().then(()=>{let n=T();n.get("/files/:fmid",async(t,e,i)=>{if(t.cookies=b(t.headers.cookie),!await k({req:t,secret:`${process.env.JWT_SECRET}`}))return e.status(401).end();try{let s=await J(new R(t.params.fmid));if(s){let{filename:c,dir:o}=s;if(!o||o&&!S(o))return e.status(404).end("Can't find that file, sorry!");console.log(`File downloading: ${c}
At: ${o}`),e.download(`${o}`,`${c}`,function(d){return d?(console.log(`Error downloading: ${d}`),i(d)):(console.log(`Successfully downloaded: ${c}`),e.status(200).end())})}else return e.status(404).end("Can't find that file, sorry!")}catch(s){return console.log(s),e.status(500).end("Something went wrong.")}}).post("/files/",async(t,e,i)=>{if(t.cookies=b(t.headers.cookie),!await k({req:t,secret:`${process.env.JWT_SECRET}`}))return e.status(401).end();let s=H(),c=new Promise((o,d)=>{s.parse(t,(l,f,r)=>{l&&d(l),o({fields:f,files:r})})});S(h)||D(h),await c.then(o=>{let{fields:d,files:l}=o,f=[];if(z(l.file)?f[0]=l.file:G(l.file)&&(f=l.file),f.length<1)throw new Error("Can't find any files");f.forEach(async r=>{let I=r.originalFilename?.lastIndexOf("."),O=r.originalFilename?.substring(I?I+1:0),u=await U({filename:r.originalFilename?r.originalFilename:"",filetype:O||"",contentType:r.mimetype?r.mimetype:"",size:r.size,uploadDate:new Date}),m=h+B(u.toHexString());return await new Promise((p,M)=>{let $=_(r.filepath),g=A(m);g.on("error",C=>{M(C)}),g.on("finish",()=>{p()}),$.pipe(g)}).catch(p=>{throw new Error(p)}),await V(u,{dir:m}),console.log(`New file uploaded at: ${m}`),console.log("fmid: "+u.toHexString()),e.status(201).json({data:{fmid:u.toHexString()}})})}).catch(o=>(console.log(o),e.status(500).end(o)))}).all("*",(t,e)=>W(t,e)),n.listen(x,()=>{console.log(`Server started on port ${x}`)})}).catch(n=>{console.error(n),process.exit(1)});

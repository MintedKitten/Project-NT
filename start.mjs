import $ from"./node_modules/next/dist/server/next.js";import R from"./node_modules/express/index.js";import{MongoClient as C}from"./node_modules/mongodb/lib/index.js";import{ObjectId as D}from"./node_modules/bson/lib/bson.js";import P from"./node_modules/formidable/src/index.js";import{createReadStream as _,createWriteStream as T,existsSync as I,mkdirSync as j}from"fs";import{createHash as H}from"crypto";import{getToken as E}from"./node_modules/next-auth/jwt/index.js";function N(n){let e=new TextEncoder().encode(n),t=H("sha256").update(e).digest();return Array.from(new Uint8Array(t)).map(a=>a.toString(16).padStart(2,"0")).join("")}var b=parseInt(`${process.env.PORT}`)||3e3,O=process.env.NODE_ENV!=="production",S=$({dev:O}),A=S.getRequestHandler(),h=O?"devProcurement":"Procurement",w="FilesMetadata";async function y(){return await new C(process.env.EXPRESS_MONGO_STRING+"").connect()}function B(n){return"originalFilename"in n}function L(n){return"length"in n}async function W(n){return await(await y()).db(h).collection(w).findOne({_id:n},{projection:{filename:1,dir:1}})}async function z(n){let e=await y(),t=await e.db(h).collection(w).insertOne(n).then(s=>s.insertedId);return await e.close(),t}async function G(n,e){let t=await y(),s=await t.db(h).collection(w).updateOne({_id:n},{$set:{dir:e.dir}}).then(l=>l.upsertedId);return await t.close(),s}function v(n=""){let e=n.split("; "),t={};return e.forEach(s=>{let l=s.indexOf("="),a=s.substring(0,l),o=s.substring(l+1);t[a]=decodeURIComponent(o)}),t}process.env.FILE_DIR||console.log("Environment FILE_DIR is not defined. Default directory will be used.");var p=process.env.FILE_DIR||process.cwd()+"/files";S.prepare().then(()=>{let n=R();n.get("/files/:fmid",async(e,t,s)=>{if(console.log(e.headers),e.cookies=v(e.headers.cookie),!await E({req:e,secret:`${process.env.JWT_SECRET}`}))return t.status(401).end();try{let a=await W(new D(e.params.fmid));if(a){let{filename:o,dir:i}=a;if(!i||i&&!I(i))return t.status(404).end("Can't find that file, sorry!");console.log(`File downloading: ${o}
At: ${i}`),t.download(`${i}`,`${o}`,function(r){return r?(console.log(`Error downloading: ${r}`),s(r)):(console.log(`Successfully downloaded: ${o}`),t.status(200).end())})}else return t.status(404).end("Can't find that file, sorry!")}catch(a){return console.log(a),t.status(500).end("Something went wrong.")}}).post("/files/",async(e,t)=>{if(console.log(e.headers),e.cookies=v(e.headers.cookie),!await E({req:e,secret:`${process.env.JWT_SECRET}`}))return t.status(401).end();let l=P(),a=new Promise((o,i)=>{l.parse(e,(r,c,d)=>{r&&i(r),o({fields:c,files:d})})});I(p)||j(p,{recursive:!0}),await a.then(o=>{let{files:i}=o,r=[];if(B(i.file)?r[0]=i.file:L(i.file)&&(r=i.file),r.length<1)throw new Error("Can't find any files");r.forEach(async c=>{let d=c.originalFilename?.lastIndexOf("."),F=c.originalFilename?.substring(d?d+1:0),f=await z({filename:c.originalFilename?c.originalFilename:"",filetype:F||"",contentType:c.mimetype?c.mimetype:"",size:c.size,uploadDate:new Date}),u=p+"/"+N(f.toHexString())+".file";return await new Promise((m,k)=>{let x=_(c.filepath),g=T(u);g.on("error",M=>{k(M)}),g.on("finish",()=>{m()}),x.pipe(g)}).catch(m=>{throw new Error(m)}),await G(f,{dir:u}),console.log(`New file uploaded at: ${u}`),console.log("fmid: "+f.toHexString()),t.status(201).json({data:{fmid:f.toHexString()}})})}).catch(o=>(console.log(o),t.status(500).end(o)))}).all("*",(e,t)=>A(e,t)),n.listen(b,()=>{console.log(`Server started on port ${b}`)})}).catch(n=>{console.error(n),process.exit(1)});
